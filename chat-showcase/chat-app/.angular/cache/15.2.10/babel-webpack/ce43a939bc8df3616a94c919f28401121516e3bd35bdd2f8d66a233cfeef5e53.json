{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../chat.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction ChatComponent_li_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const msg_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", msg_r2.user, \": \", msg_r2.message, \"\");\n  }\n}\nfunction ChatComponent_li_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const msg_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", msg_r3.user, \": \", msg_r3.message, \"\");\n  }\n}\nexport class ChatComponent {\n  constructor(chatService) {\n    this.chatService = chatService;\n    this.messages = [];\n    this.privateMessages = [];\n    this.username = '';\n    this.message = '';\n    this.receiverId = 0;\n  }\n  ngOnInit() {\n    this.chatService.startConnection();\n    this.chatService.receiveMessage((user, message) => {\n      this.messages.push({\n        user,\n        message\n      });\n    });\n    this.chatService.receivePrivateMessage((user, message) => {\n      // You can add a condition or a flag to differentiate private messages\n      this.messages.push({\n        user,\n        message\n      });\n    });\n  }\n  sendMessage() {\n    this.chatService.sendMessage(this.username, this.message);\n    this.message = '';\n  }\n  sendPrivateMessage(receiverId) {\n    this.chatService.sendPrivateMessage(receiverId, this.message);\n    this.message = '';\n  }\n  static #_ = this.ɵfac = function ChatComponent_Factory(t) {\n    return new (t || ChatComponent)(i0.ɵɵdirectiveInject(i1.ChatService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChatComponent,\n    selectors: [[\"app-chat\"]],\n    decls: 16,\n    vars: 6,\n    consts: [[\"type\", \"text\", \"placeholder\", \"Username\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"placeholder\", \"Message\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [\"type\", \"number\", \"placeholder\", \"Receiver ID\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"placeholder\", \"Private Message\", 3, \"ngModel\", \"ngModelChange\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function ChatComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function ChatComponent_Template_input_ngModelChange_1_listener($event) {\n          return ctx.username = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function ChatComponent_Template_input_ngModelChange_2_listener($event) {\n          return ctx.message = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function ChatComponent_Template_button_click_3_listener() {\n          return ctx.sendMessage();\n        });\n        i0.ɵɵtext(4, \"Send\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"div\")(6, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function ChatComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.receiverId = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function ChatComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.message = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function ChatComponent_Template_button_click_8_listener() {\n          return ctx.sendPrivateMessage(ctx.receiverId);\n        });\n        i0.ɵɵtext(9, \"Send Private\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"ul\");\n        i0.ɵɵtemplate(11, ChatComponent_li_11_Template, 2, 2, \"li\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"h3\");\n        i0.ɵɵtext(13, \"Private Messages\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"ul\");\n        i0.ɵɵtemplate(15, ChatComponent_li_15_Template, 2, 2, \"li\", 5);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.username);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.message);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.receiverId);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.message);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.privateMessages);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgModel],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";;;;;;IAYIA,0BAAiC;IAAAA,YAAiC;IAAAA,iBAAK;;;;IAAtCA,eAAiC;IAAjCA,gEAAiC;;;;;IAKpEA,0BAAwC;IAAAA,YAAiC;IAAAA,iBAAK;;;;IAAtCA,eAAiC;IAAjCA,gEAAiC;;;ACT3E,OAAM,MAAOC,aAAa;EAOxBC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAN/B,aAAQ,GAAsC,EAAE;IAChD,oBAAe,GAAwC,EAAE;IACzD,aAAQ,GAAW,EAAE;IACrB,YAAO,GAAW,EAAE;IACpB,eAAU,GAAW,CAAC;EAE0B;EAEhDC,QAAQ;IACN,IAAI,CAACD,WAAW,CAACE,eAAe,EAAE;IAClC,IAAI,CAACF,WAAW,CAACG,cAAc,CAAC,CAACC,IAAI,EAAEC,OAAO,KAAI;MAChD,IAAI,CAACC,QAAQ,CAACC,IAAI,CAAC;QAACH,IAAI;QAAEC;MAAO,CAAC,CAAC;IACrC,CAAC,CAAC;IACF,IAAI,CAACL,WAAW,CAACQ,qBAAqB,CAAC,CAACJ,IAAI,EAAEC,OAAO,KAAI;MACvD;MACA,IAAI,CAACC,QAAQ,CAACC,IAAI,CAAC;QAACH,IAAI;QAAEC;MAAO,CAAC,CAAC;IACrC,CAAC,CAAC;EACJ;EAEAI,WAAW;IACT,IAAI,CAACT,WAAW,CAACS,WAAW,CAAC,IAAI,CAACC,QAAQ,EAAE,IAAI,CAACL,OAAO,CAAC;IACzD,IAAI,CAACA,OAAO,GAAG,EAAE;EACnB;EAEAM,kBAAkB,CAACC,UAAkB;IACnC,IAAI,CAACZ,WAAW,CAACW,kBAAkB,CAACC,UAAU,EAAE,IAAI,CAACP,OAAO,CAAC;IAC7D,IAAI,CAACA,OAAO,GAAG,EAAE;EACnB;EAAC;qBA5BUP,aAAa;EAAA;EAAA;UAAbA,aAAa;IAAAe;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QDR1BpB,2BAAK;QACMA;UAAA;QAAA,EAAsB;QAA7BA,iBAAmE;QACnEA,gCAAiE;QAA1DA;UAAA;QAAA,EAAqB;QAA5BA,iBAAiE;QACjEA,iCAAgC;QAAxBA;UAAA,OAASqB,iBAAa;QAAA,EAAC;QAACrB,oBAAI;QAAAA,iBAAS;QAE/CA,2BAAK;QACIA;UAAA;QAAA,EAAwB;QAA/BA,iBAA0E;QAC1EA,gCAAyE;QAAlEA;UAAA;QAAA,EAAqB;QAA5BA,iBAAyE;QACzEA,iCAAiD;QAAzCA;UAAA,OAASqB,sCAA8B;QAAA,EAAC;QAACrB,4BAAY;QAAAA,iBAAS;QAGxEA,2BAAI;QACFA,8DAAuE;QACzEA,iBAAK;QAELA,2BAAI;QAAAA,iCAAgB;QAAAA,iBAAK;QAC3BA,2BAAI;QACFA,8DAA8E;QAChFA,iBAAK;;;QAjBMA,eAAsB;QAAtBA,sCAAsB;QACtBA,eAAqB;QAArBA,qCAAqB;QAIrBA,eAAwB;QAAxBA,wCAAwB;QACxBA,eAAqB;QAArBA,qCAAqB;QAKRA,eAAW;QAAXA,sCAAW;QAKbA,eAAkB;QAAlBA,6CAAkB","names":["i0","ChatComponent","constructor","chatService","ngOnInit","startConnection","receiveMessage","user","message","messages","push","receivePrivateMessage","sendMessage","username","sendPrivateMessage","receiverId","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\User\\source\\repos\\Flats4us\\Flats4us\\chat-showcase\\chat-app\\src\\app\\chat\\chat.component.html","C:\\Users\\User\\source\\repos\\Flats4us\\Flats4us\\chat-showcase\\chat-app\\src\\app\\chat\\chat.component.ts"],"sourcesContent":["<div>\r\n    <input [(ngModel)]=\"username\" type=\"text\" placeholder=\"Username\" />\r\n    <input [(ngModel)]=\"message\" type=\"text\" placeholder=\"Message\" />\r\n    <button (click)=\"sendMessage()\">Send</button>\r\n  </div>\r\n  <div>\r\n    <input [(ngModel)]=\"receiverId\" type=\"number\" placeholder=\"Receiver ID\" />\r\n    <input [(ngModel)]=\"message\" type=\"text\" placeholder=\"Private Message\" />\r\n    <button (click)=\"sendPrivateMessage(receiverId)\">Send Private</button>\r\n  </div>\r\n\r\n  <ul>\r\n    <li *ngFor=\"let msg of messages\">{{ msg.user }}: {{ msg.message }}</li>\r\n  </ul>\r\n\r\n  <h3>Private Messages</h3>\r\n<ul>\r\n  <li *ngFor=\"let msg of privateMessages\">{{ msg.user }}: {{ msg.message }}</li>\r\n</ul>\r\n  \r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { ChatService } from \"../chat.service\";\r\n\r\n@Component({\r\n  selector: 'app-chat',\r\n  templateUrl: './chat.component.html',\r\n  styleUrls: ['./chat.component.css']\r\n})\r\nexport class ChatComponent implements OnInit {\r\n  messages: {user: string, message: string}[] = [];\r\n  privateMessages: { user: string, message: string }[] = []; \r\n  username: string = '';\r\n  message: string = '';\r\n  receiverId: number = 0;\r\n\r\n  constructor(private chatService: ChatService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.chatService.startConnection();\r\n    this.chatService.receiveMessage((user, message) => {\r\n      this.messages.push({user, message});\r\n    });\r\n    this.chatService.receivePrivateMessage((user, message) => {\r\n      // You can add a condition or a flag to differentiate private messages\r\n      this.messages.push({user, message});\r\n    });\r\n  }\r\n\r\n  sendMessage(): void {\r\n    this.chatService.sendMessage(this.username, this.message);\r\n    this.message = '';\r\n  }\r\n  \r\n  sendPrivateMessage(receiverId: number): void {\r\n    this.chatService.sendPrivateMessage(receiverId, this.message);\r\n    this.message = '';\r\n  }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}