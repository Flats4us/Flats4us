{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ChatComponent } from './chat/chat.component';\nimport { FormsModule } from '@angular/forms';\nimport { LoginComponent } from './login/login.component';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http'; // Import HttpClientModule\nimport { AuthService } from './auth.service';\nimport { GroupChatsComponent } from './group-chats/group-chats.component';\nimport { AuthInterceptor } from './interceptors/auth.interceptor';\nimport { PrivateChatsListComponent } from './private-chats-list/private-chats-list.component';\n// import { HTTP_INTERCEPTORS } from '@angular/common/http';\n// import { JwtInterceptor } from './interceptors/jwt.interceptor';\nlet AppModule = class AppModule {};\nAppModule = __decorate([NgModule({\n  declarations: [AppComponent, ChatComponent, LoginComponent, GroupChatsComponent, PrivateChatsListComponent],\n  imports: [BrowserModule, HttpClientModule, AppRoutingModule, FormsModule],\n  providers: [AuthService, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: AuthInterceptor,\n    multi: true\n  }\n  // { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true }\n  ],\n\n  bootstrap: [AppComponent]\n})], AppModule);\nexport { AppModule };","map":{"version":3,"mappings":";AAAA,SAASA,QAAQ,QAAQ,eAAe;AACxC,SAASC,aAAa,QAAQ,2BAA2B;AAEzD,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,aAAa,QAAQ,uBAAuB;AACrD,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,iBAAiB,EAAEC,gBAAgB,QAAQ,sBAAsB,CAAC,CAAC;AAC5E,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,mBAAmB,QAAQ,qCAAqC;AACzE,SAASC,eAAe,QAAQ,iCAAiC;AACjE,SAASC,yBAAyB,QAAQ,mDAAmD;AAC7F;AACA;AAyBO,IAAMC,SAAS,GAAf,MAAMA,SAAS,GAAI;AAAbA,SAAS,eAvBrBb,QAAQ,CAAC;EACRc,YAAY,EAAE,CACZX,YAAY,EACZC,aAAa,EACbE,cAAc,EACdI,mBAAmB,EACnBE,yBAAyB,CAC1B;EACDG,OAAO,EAAE,CACPd,aAAa,EACbO,gBAAgB,EAChBN,gBAAgB,EAChBG,WAAW,CACZ;EACDW,SAAS,EAAE,CACTP,WAAW,EAET;IAAEQ,OAAO,EAAEV,iBAAiB;IAAEW,QAAQ,EAAEP,eAAe;IAAEQ,KAAK,EAAE;EAAI;EAEtE;EAAA,CACD;;EACDC,SAAS,EAAE,CAACjB,YAAY;CACzB,CAAC,GACWU,SAAS,CAAI;SAAbA,SAAS","names":["NgModule","BrowserModule","AppRoutingModule","AppComponent","ChatComponent","FormsModule","LoginComponent","HTTP_INTERCEPTORS","HttpClientModule","AuthService","GroupChatsComponent","AuthInterceptor","PrivateChatsListComponent","AppModule","declarations","imports","providers","provide","useClass","multi","bootstrap"],"sourceRoot":"","sources":["C:\\Users\\User\\source\\repos\\Flats4us\\Flats4us\\chat-showcase\\chat-app\\src\\app\\app.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ChatComponent } from './chat/chat.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http'; // Import HttpClientModule\r\nimport { AuthService } from './auth.service';\r\nimport { GroupChatsComponent } from './group-chats/group-chats.component';\r\nimport { AuthInterceptor } from './interceptors/auth.interceptor';\nimport { PrivateChatsListComponent } from './private-chats-list/private-chats-list.component';\r\n// import { HTTP_INTERCEPTORS } from '@angular/common/http';\r\n// import { JwtInterceptor } from './interceptors/jwt.interceptor';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ChatComponent,\r\n    LoginComponent,\r\n    GroupChatsComponent,\r\n    PrivateChatsListComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    FormsModule\r\n  ],\r\n  providers: [\r\n    AuthService,\r\n    \r\n      { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\r\n  \r\n    // { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}