{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../chat.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction GroupChatComponent_div_8_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\")(2, \"strong\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const msg_r2 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"User \", msg_r2.userId, \":\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", msg_r2.message, \"\");\n  }\n}\nfunction GroupChatComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, GroupChatComponent_div_8_div_1_Template, 5, 2, \"div\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.messages);\n  }\n}\nexport class GroupChatComponent {\n  constructor(chatService) {\n    this.chatService = chatService;\n    this.message = '';\n    this.messages = []; // Array to store messages\n  }\n\n  joinGroupChat() {\n    this.chatService.joinGroupChat(this.currentGroupChatId);\n  }\n  sendMessage() {\n    this.chatService.sendGroupMessage(this.currentGroupChatId, this.message);\n    this.message = ''; // Clear the message input\n  }\n\n  ngOnInit() {\n    this.chatService.registerGroupMessageHandler((groupChatId, userId, message) => {\n      if (groupChatId === this.currentGroupChatId) {\n        this.messages.push({\n          userId,\n          message\n        });\n      }\n    });\n  }\n  static #_ = this.ɵfac = function GroupChatComponent_Factory(t) {\n    return new (t || GroupChatComponent)(i0.ɵɵdirectiveInject(i1.ChatService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GroupChatComponent,\n    selectors: [[\"app-group-chat\"]],\n    decls: 9,\n    vars: 3,\n    consts: [[\"type\", \"number\", \"placeholder\", \"Group Chat ID\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [\"type\", \"text\", \"placeholder\", \"Type a message\", 3, \"ngModel\", \"ngModelChange\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function GroupChatComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function GroupChatComponent_Template_input_ngModelChange_1_listener($event) {\n          return ctx.currentGroupChatId = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function GroupChatComponent_Template_button_click_2_listener() {\n          return ctx.joinGroupChat();\n        });\n        i0.ɵɵtext(3, \"Join Group Chat\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"br\");\n        i0.ɵɵelementStart(5, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function GroupChatComponent_Template_input_ngModelChange_5_listener($event) {\n          return ctx.message = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function GroupChatComponent_Template_button_click_6_listener() {\n          return ctx.sendMessage();\n        });\n        i0.ɵɵtext(7, \"Send Message\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(8, GroupChatComponent_div_8_Template, 2, 1, \"div\", 3);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.currentGroupChatId);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.message);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.messages.length > 0);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgModel],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";;;;;;IASQA,2BAAkC;IACrBA,YAAsB;IAAAA,iBAAS;IAACA,YAAiB;IAAAA,iBAAI;;;;IAArDA,eAAsB;IAAtBA,kDAAsB;IAAUA,eAAiB;IAAjBA,8CAAiB;;;;;IAFlEA,2BAAiC;IAC7BA,yEAEM;IACRA,iBAAM;;;;IAHiBA,eAAW;IAAXA,yCAAW;;;ACDxC,OAAM,MAAOC,kBAAkB;EAK7BC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAH/B,YAAO,GAAG,EAAE;IACZ,aAAQ,GAA0C,EAAE,CAAC,CAAC;EAEN;;EAEhDC,aAAa;IACX,IAAI,CAACD,WAAW,CAACC,aAAa,CAAC,IAAI,CAACC,kBAAkB,CAAC;EACzD;EAEAC,WAAW;IACT,IAAI,CAACH,WAAW,CAACI,gBAAgB,CAAC,IAAI,CAACF,kBAAkB,EAAE,IAAI,CAACG,OAAO,CAAC;IACxE,IAAI,CAACA,OAAO,GAAG,EAAE,CAAC,CAAC;EACrB;;EAEAC,QAAQ;IACN,IAAI,CAACN,WAAW,CAACO,2BAA2B,CAAC,CAACC,WAAW,EAAEC,MAAM,EAAEJ,OAAO,KAAI;MAC5E,IAAIG,WAAW,KAAK,IAAI,CAACN,kBAAkB,EAAE;QAC3C,IAAI,CAACQ,QAAQ,CAACC,IAAI,CAAC;UAAEF,MAAM;UAAEJ;QAAO,CAAE,CAAC;;IAE3C,CAAC,CAAC;EACJ;EAAC;qBAtBUP,kBAAkB;EAAA;EAAA;UAAlBA,kBAAkB;IAAAc;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QDR/BnB,2BAAK;QACoBA;UAAA;QAAA,EAAgC;QAArDA,iBAAkF;QAClFA,iCAAkC;QAA1BA;UAAA,OAASoB,mBAAe;QAAA,EAAC;QAACpB,+BAAe;QAAAA,iBAAS;QAC1DA,qBAAI;QAEJA,gCAAsE;QAAnDA;UAAA;QAAA,EAAqB;QAAxCA,iBAAsE;QACtEA,iCAAgC;QAAxBA;UAAA,OAASoB,iBAAa;QAAA,EAAC;QAACpB,4BAAY;QAAAA,iBAAS;QAErDA,mEAIQ;QACRA,iBAAM;;;QAZeA,eAAgC;QAAhCA,gDAAgC;QAIlCA,eAAqB;QAArBA,qCAAqB;QAGlCA,eAAyB;QAAzBA,8CAAyB","names":["i0","GroupChatComponent","constructor","chatService","joinGroupChat","currentGroupChatId","sendMessage","sendGroupMessage","message","ngOnInit","registerGroupMessageHandler","groupChatId","userId","messages","push","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\User\\source\\repos\\Flats4us\\Flats4us\\chat-showcase\\chat-app\\src\\app\\group-chats\\group-chats.component.html","C:\\Users\\User\\source\\repos\\Flats4us\\Flats4us\\chat-showcase\\chat-app\\src\\app\\group-chats\\group-chats.component.ts"],"sourcesContent":["<div>\n    <input type=\"number\" [(ngModel)]=\"currentGroupChatId\" placeholder=\"Group Chat ID\">\n    <button (click)=\"joinGroupChat()\">Join Group Chat</button>\n    <br>\n  \n    <input type=\"text\" [(ngModel)]=\"message\" placeholder=\"Type a message\">\n    <button (click)=\"sendMessage()\">Send Message</button>\n  \n    <div *ngIf=\"messages.length > 0\">\n        <div *ngFor=\"let msg of messages\">\n          <p><strong>User {{ msg.userId }}:</strong> {{ msg.message }}</p>\n        </div>\n      </div>\n    </div>\n  ","import { Component } from '@angular/core';\nimport { ChatService } from '../chat.service';\n\n@Component({\n  selector: 'app-group-chat',\n  templateUrl: './group-chats.component.html',\n  styleUrls: ['./group-chats.component.css']\n})\nexport class GroupChatComponent {\n  currentGroupChatId!: number;\n  message = '';\n  messages: { userId: number, message: string }[] = []; // Array to store messages\n\n  constructor(private chatService: ChatService) { }\n\n  joinGroupChat(): void {\n    this.chatService.joinGroupChat(this.currentGroupChatId);\n  }\n\n  sendMessage(): void {\n    this.chatService.sendGroupMessage(this.currentGroupChatId, this.message);\n    this.message = ''; // Clear the message input\n  }\n\n  ngOnInit(): void {\n    this.chatService.registerGroupMessageHandler((groupChatId, userId, message) => {\n      if (groupChatId === this.currentGroupChatId) {\n        this.messages.push({ userId, message });\n      }\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}